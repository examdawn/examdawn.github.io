# Sample workflow for building and deploying a VitePress site to GitHub Pages
#
name: Deploy VitePress site to Pages

on:
  # Runs on pushes targeting the `main` branch. Change this to `master` if you're
  # using the `master` branch as the default branch.
  push:
    branches: [vitepress]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  # Every second day of the month at 01:00 AM
  schedule:
    - cron: "0 1 */2 * *" 
    # 0 1 */2 * *

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Not needed if lastUpdated is not enabled
      # - uses: pnpm/action-setup@v3 # Uncomment this block if you're using pnpm
      #   with:
      #     version: 9 # Not needed if you've set "packageManager" in package.json
      # - uses: oven-sh/setup-bun@v1 # Uncomment this if you're using Bun
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm # or pnpm / yarn
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: npm ci # or pnpm install / yarn install / bun install
      - name: Update Submodule
        run: git submodule update --init --remote # Initialize and update all submodules to their latest commits.
      #- name: Generate Sidebar(for Future Use) and The rest of the scripts
      #  run: |
      #    cd docs/contents/
      #    echo "Generating Sidebar XML..."
      #    bash helper-scripts/gen-subxml.sh
      #    echo "Outputting Sidebar XML..."
      #    cat sidebar.xml
      #
      #    echo "Generating assignment.md, lab.md, solved.md"
      #    bash helper-scripts/gen-md.sh
      - name: Set up jsdos and Turbo C++
        continue-on-error: true
        run: | 
          mkdir -p docs/web-projects/assets/tcpp
          cd docs/web-projects/assets/tcpp
          wget https://turboc.pages.dev/turbocpp-831b2f5.jsdos --output turbocpp.jsdos
      - name: Build with VitePress
        run: npm run docs:build # or pnpm docs:build / yarn docs:build / bun run docs:build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
